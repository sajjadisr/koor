rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Public Data (accessible by all authenticated users) ---
    // Businesses: Anyone authenticated can read, only owner can create/update their own business, any authenticated user can write reviews (but they need approval)
    match /artifacts/{appId}/public/data/businesses/{businessId} {
      allow read: if request.auth != null; // Anyone logged in can read businesses
      allow create: if request.auth != null; // Any authenticated user can create a business (will be unapproved initially)
      // Only the owner can update/delete their business IF the business is approved.
      // Or, a broader rule if you have an admin field on the user profile:
      // allow update, delete: if request.auth != null && (get(/databases/$(database)/documents/artifacts/$(appId)/users/$(request.auth.uid)/profile/main).data.isAdmin == true || request.auth.uid == resource.data.ownerId);
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.ownerId; // Simpler for now: Only owner can update/delete.
    }

    match /artifacts/{appId}/public/data/reviews/{reviewId} {
      allow read: if request.auth != null; // Anyone logged in can read reviews
      allow create: if request.auth != null; // Any authenticated user can write a review
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId; // Only the user who wrote the review can update/delete it
    }

    // --- Private User Data (accessible only by the owner) ---
    // User Profiles, Favorites, Visits: Only the authenticated user can read/write their own data
    match /artifacts/{appId}/users/{userId}/profile/main {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /artifacts/{appId}/users/{userId}/favorites/{favoriteId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    match /artifacts/{appId}/users/{userId}/visits/{visitId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Deny all other unmatched documents by default
    match /{document=**} {
      allow read, write: if false; 
    }
  }
}
